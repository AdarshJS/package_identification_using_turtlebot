# We need a decent ubuntu dist
sudo: required
dist: trusty

# Modern cpp settings from
#  http://genbattle.bitbucket.org/blog/2016/01/17/c++-travis-ci/
language: cpp
matrix:
  include:
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - george-edison55-precise-backports
          packages:
            - g++-7
            - cmake
            - cmake-data
      env: 
        - MATRIX_EVAL="CC=gcc-7 && CXX=g++-7"
        - USE_DEB=true  ROS_DISTRO="kinetic"   ROS_REPOSITORY_PATH=http://packages.ros.org/ros/ubuntu
        - USE_DEB=true  ROS_DISTRO="kinetic"   ROS_REPOSITORY_PATH=http://packages.ros.org/ros-shadow-fixed/ubuntu
matrix:
  allow_failures:
    - env: USE_DEB=true  ROS_DISTRO="kinetic"   ROS_REPOSITORY_PATH=http://packages.ros.org/ros-shadow-fixed/ubuntu

before_install:
  - eval "${MATRIX_EVAL}"
  - pip install --user cpp-coveralls
install:
  - sudo apt-get install -y -qq lcov
  # OpenCV install
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev

  # Download from github
  - curl -sL https://github.com/Itseez/opencv/archive/3.3.0.zip > opencv.zip
  - unzip opencv.zip
  - cd opencv-3.3.0
  - mkdir build
  - cd build
  - cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_TBB=ON -D BUILD_NEW_PYTHON_SUPPORT=ON -D WITH_V4L=ON -D INSTALL_C_EXAMPLES=ON -D INSTALL_PYTHON_EXAMPLES=ON -D BUILD_EXAMPLES=ON -D WITH_QT=ON -D WITH_OPENGL=ON ..
  - make -j4
  - sudo make install
  
  - sudo sh -c 'echo "/usr/local/lib" > /etc/ld.so.conf.d/opencv.conf'
  - sudo ldconfig
  - cd ../../

  # Install Gazebo
  - curl -sSL http://get.gazebosim.org | sh
script:
  - export CXX=$COMPILER;

notifications:
  email: false
